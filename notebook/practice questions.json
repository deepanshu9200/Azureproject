{
	"name": "practice questions",
	"properties": {
		"folder": {
			"name": "Learning"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "sparkpool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "e9ed57d4-7fb7-4e31-b021-34aeb802fda3"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/41e7dbb8-edc9-43da-b117-e8bffb8e870b/resourceGroups/Footballworldcup/providers/Microsoft.Synapse/workspaces/footballworldcupworkspace/bigDataPools/sparkpool",
				"name": "sparkpool",
				"type": "Spark",
				"endpoint": "https://footballworldcupworkspace.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/sparkpool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"*Distinct Data*"
				]
			},
			{
				"cell_type": "code",
				"source": [
					"\r\n",
					"# importing module \r\n",
					"import pyspark \r\n",
					"  \r\n",
					"# importing sparksession from  \r\n",
					"# pyspark.sql module \r\n",
					"from pyspark.sql import SparkSession \r\n",
					"  \r\n",
					"# creating sparksession and giving \r\n",
					"# an app name \r\n",
					"spark = SparkSession.builder.appName('sparkdf').getOrCreate() \r\n",
					"  \r\n",
					"# list  of college data \r\n",
					"data = [[\"1\", \"bobby\", \"vvit\"],  \r\n",
					"        [\"2\", \"sravan\", \"jntuk\"], \r\n",
					"        [\"3\", \"rohith\", \"AU\"], \r\n",
					"        [\"4\", \"sridevi\", \"GVRS\"],  \r\n",
					"        [\"1\", \"bobby\", \"vvit\"]] \r\n",
					"  \r\n",
					"# specify column names \r\n",
					"columns = ['ID', 'NAME', 'COLLEGE'] \r\n",
					"  \r\n",
					"# creating a dataframe from the  \r\n",
					"# lists of data \r\n",
					"dataframe = spark.createDataFrame(data, columns) \r\n",
					"  \r\n",
					"print('Actual data in dataframe') \r\n",
					"dataframe.show() "
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"dataframe.distinct().show()\r\n",
					"dataframe.select(\"id\").distinct().show()\r\n",
					"dataframe.distinct().count()\r\n",
					"dataframe1=dataframe.drop_duplicates().show()"
				],
				"execution_count": 13
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"\r\n",
					"# importing module \r\n",
					"import pyspark \r\n",
					"  \r\n",
					"# importing sparksession from  \r\n",
					"# pyspark.sql module \r\n",
					"from pyspark.sql import SparkSession \r\n",
					"from pyspark.sql.functions import split,explode\r\n",
					"\r\n",
					"# creating sparksession and giving \r\n",
					"# an app name \r\n",
					"spark = SparkSession.builder.appName('sparkdf').getOrCreate() \r\n",
					"\r\n",
					"# list  of college data \r\n",
					"data = [[\"How are you\"],  \r\n",
					"        [\"what are you doing\"], \r\n",
					"        [\"Going to office\"], \r\n",
					"        [\"Thank you\"],  \r\n",
					"        [\"Well done\"]] \r\n",
					"  \r\n",
					"# specify column names \r\n",
					"columns = ['Text'] \r\n",
					"  \r\n",
					"# creating a dataframe from the  \r\n",
					"# lists of data \r\n",
					"dataframe2 = spark.createDataFrame(data, columns) \r\n",
					"  \r\n",
					"print('Actual data in dataframe') \r\n",
					"dataframe2.show() "
				],
				"execution_count": 31
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Program to count number of words"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"dataframe3=dataframe2.withColumn(\"test\",split(\"Text\",' '))\r\n",
					"dataframe3.show()"
				],
				"execution_count": 32
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"dataframe4=dataframe3.withColumn(\"explode\",explode(dataframe3['test']))\r\n",
					"dataframe4.show()"
				],
				"execution_count": 35
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"dataframe4.groupBy(\"explode\").count().show()\r\n",
					""
				],
				"execution_count": 37
			}
		]
	}
}